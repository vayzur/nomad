---
- name: Make EasyTier directory
  file:
    path: "{{ easytier_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Set EasyTier download URL
  set_fact:
    easytier_url: "https://github.com/EasyTier/EasyTier/releases/download/{{ easytier_version }}/easytier-linux-{{ ansible_architecture }}-{{ easytier_version }}.zip"
    easytier_temp_dir: "/tmp/easytier-linux-{{ ansible_architecture }}"

- name: Download EasyTier binaries
  get_url:
    url: "{{ easytier_url }}"
    dest: "{{ easytier_temp_dir }}.zip"
    mode: 0755

- name: Extract EasyTier binaries
  unarchive:
    src: "{{ easytier_temp_dir }}.zip"
    dest: "/tmp/"
    remote_src: true

- name: Move easytier-core to {{ easytier_dir }}
  copy:
    src: "{{ easytier_temp_dir }}/easytier-core"
    dest: "{{ easytier_dir }}/easytier-core"
    mode: 0755
    remote_src: true

- name: Move easytier-cli to {{ easytier_dir }}
  copy:
    src: "{{ easytier_temp_dir }}/easytier-cli"
    dest: "{{ easytier_dir }}/easytier-cli"
    mode: 0755
    remote_src: true

- name: Determine peer host based on reverse flag
  set_fact:
    peer_host: "{{ hostvars['wormhole'].ansible_host if easytier_reverse else hostvars['stargate'].ansible_host }}"
  delegate_to: localhost
  tags:
    - easytier-service

- name: Generate taskset CPU mask for easytier service
  set_fact:
    cpu_mask: >-
      {% if ansible_processor_vcpus|int == 1 %}0{% elif ansible_processor_vcpus|int == 2 %}1{% else %}1-{{ ansible_processor_vcpus | int - 1 }}{% endif %}
  tags:
    - easytier-service

- name: Make EasyTier service for wormhole
  template:
    src: "{{ 'server.service.j2' if easytier_reverse else 'client.service.j2' }}"
    dest: "/etc/systemd/system/easytier.service"
  when: inventory_hostname == 'wormhole'
  tags:
    - easytier-service

- name: Make EasyTier service for stargate
  template:
    src: "{{ 'client.service.j2' if easytier_reverse else 'server.service.j2' }}"
    dest: "/etc/systemd/system/easytier.service"
  when: inventory_hostname == 'stargate'
  tags:
    - easytier-service

- name: Enable EasyTier service
  systemd:
    name: easytier
    state: restarted
    daemon_reload: true
    enabled: true
  changed_when: true
  ignore_errors: true
  tags:
    - easytier-service

- name: Make EasyTier TUN setup script
  template:
    src: easytier-tun.sh.j2
    dest: "{{ easytier_dir }}/easytier-tun.sh"
    mode: 0744
    owner: root
    group: root
  tags:
    - easytier-service

- name: Make EasyTier TUN setup service
  template:
    src: easytier-tun.service.j2
    dest: /etc/systemd/system/easytier-tun.service
    mode: 0644
    owner: root
    group: root
  changed_when: true
  tags:
    - easytier-service

- name: Enable easytier-tun
  systemd:
    name: easytier-tun
    state: restarted
    daemon_reload: true
    enabled: true
  changed_when: true
  ignore_errors: true
  tags:
    - easytier-service

- name: Delete EasyTier extracted directory
  file:
    path: "{{ easytier_temp_dir }}"
    state: absent

- name: Delete EasyTier downloaded zip file
  file:
    path: "{{ easytier_temp_dir }}.zip"
    state: absent
